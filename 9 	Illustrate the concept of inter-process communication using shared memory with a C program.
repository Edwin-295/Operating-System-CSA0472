#include <stdio.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>
#include <unistd.h>
#include <string.h>

int main() {
    key_t key = ftok("shmfile", 65);
    int shmid = shmget(key, 1024, 0666 | IPC_CREAT);

    char *shared_memory = (char *)shmat(shmid, (void *)0, 0);

    if (fork() == 0) {
        printf("Child process writing to shared memory...\n");
        strcpy(shared_memory, "Hello from child process!");
        printf("Child process wrote: %s\n", shared_memory);
        shmdt(shared_memory);
    } else {
        wait(NULL);
        printf("Parent process reading from shared memory...\n");
        printf("Parent process read: %s\n", shared_memory);
        shmdt(shared_memory);
        shmctl(shmid, IPC_RMID, NULL);
    }

    return 0;
}
